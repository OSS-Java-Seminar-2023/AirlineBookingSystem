CREATE TABLE IF NOT EXISTS User (                                    id INT NOT NULL AUTO_INCREMENT,                                    uuid BINARY(16),                                    username VARCHAR(255),                                    password VARCHAR(255),                                    email VARCHAR(255),                                    PRIMARY KEY (id));CREATE TABLE IF NOT EXISTS Passenger (                                         id INT NOT NULL AUTO_INCREMENT,                                         uuid BINARY(16),                                         name VARCHAR(255),                                         surname VARCHAR(255),                                         mail VARCHAR(255),                                         PIN VARCHAR(255),                                         DOB DATE,                                         PRIMARY KEY (id));CREATE TABLE IF NOT EXISTS Airplane (                                        id INT NOT NULL AUTO_INCREMENT,                                        uuid BINARY(16),                                        registration VARCHAR(255),                                        model VARCHAR(255),                                        first_seats INT,                                        business_seats INT,                                        economy_seats INT,                                        PRIMARY KEY (id));CREATE TABLE IF NOT EXISTS Airport (                                       id INT NOT NULL AUTO_INCREMENT,                                       uuid BINARY(16),                                       airport_name VARCHAR(255),                                       IATA CHAR(3),                                       PRIMARY KEY (id));CREATE TABLE IF NOT EXISTS Flight (                                      id INT NOT NULL AUTO_INCREMENT,                                      uuid BINARY(16),                                      flight_number VARCHAR(255),                                      from_id INT,                                      to_id INT,                                      airplane_id INT,                                      date DATE,                                      time TIME,                                      gate VARCHAR(255),                                      duration TIME,                                      PRIMARY KEY (id),                                      FOREIGN KEY (from_id) REFERENCES Airport(id),                                      FOREIGN KEY (to_id) REFERENCES Airport(id),                                      FOREIGN KEY (airplane_id) REFERENCES Airplane(id));CREATE TABLE IF NOT EXISTS Seat (                                    id INT NOT NULL AUTO_INCREMENT,                                    uuid BINARY(16),                                    flight_id INT,                                    seat_price DECIMAL(10, 2),                                    seat_class ENUM('first', 'business', 'economy'),                                    PRIMARY KEY (id),                                    FOREIGN KEY (flight_id) REFERENCES Flight(id));CREATE TABLE IF NOT EXISTS Ticket (                                      id INT NOT NULL AUTO_INCREMENT,                                      uuid BINARY(16),                                      passenger_id INT,                                      flight_id INT,                                      seat_id INT,                                      ticket_price DECIMAL(10, 2),                                      PRIMARY KEY (id),                                      FOREIGN KEY (passenger_id) REFERENCES Passenger(id),                                      FOREIGN KEY (flight_id) REFERENCES Flight(id),                                      FOREIGN KEY (seat_id) REFERENCES Seat(id));CREATE TABLE IF NOT EXISTS Purchase (                                        id INT NOT NULL AUTO_INCREMENT,                                        uuid BINARY(16),                                        user_id INT,                                        ticket_id INT,                                        payment_info VARCHAR(255),                                        payment_date DATE,                                        PRIMARY KEY (id),                                        FOREIGN KEY (user_id) REFERENCES User(id),                                        FOREIGN KEY (ticket_id) REFERENCES Ticket(id));